{"ast":null,"code":"var _jsxFileName = \"/Users/colinlam/Desktop/code/HoHey/hoheywebsite/client/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, React } from \"react\";\nimport useAsync from \"./components/useAsync\";\nimport { Input, Message, Button } from \"semantic-ui-react\";\nimport { unlockAccount } from \"./api/web3\";\nimport { useWeb3Context } from \"./contexts/Web3\";\nimport 'semantic-ui-css/semantic.min.css';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [filmName, setFilmName] = useState('');\n  const [filmDescription, setFilmDescription] = useState('');\n  const [filmCreator, setFilmCreator] = useState('');\n  const {\n    state: {\n      account\n    },\n    updateAccount\n  } = useWeb3Context();\n  const {\n    pending,\n    error,\n    call\n  } = useAsync(unlockAccount);\n\n  async function onClickConnect() {\n    const {\n      error,\n      data\n    } = await call(null);\n\n    if (error) {\n      console.error(error);\n    }\n\n    if (data) {\n      updateAccount(data);\n    }\n  }\n\n  const addData = () => {\n    console.log(filmName, filmDescription, filmCreator);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Testing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Account: \", account]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Film Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        onChange: e => {\n          setFilmName(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Film Creator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        onChange: e => {\n          setFilmCreator(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Film Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        onChange: e => {\n          setFilmDescription(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"green\",\n        onClick: () => addData,\n        children: \"Publish Video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Message, {\n        warning: true,\n        children: \"Metamask is not connected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"blue\",\n        onClick: () => onClickConnect(),\n        disabled: pending,\n        loading: pending,\n        children: \"Connect to Metamask\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"N+++kn3uQQULuSs/gcBa0bQKbQo=\", false, function () {\n  return [useWeb3Context, useAsync];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/colinlam/Desktop/code/HoHey/hoheywebsite/client/src/App.tsx"],"names":["useState","React","useAsync","Input","Message","Button","unlockAccount","useWeb3Context","App","filmName","setFilmName","filmDescription","setFilmDescription","filmCreator","setFilmCreator","state","account","updateAccount","pending","error","call","onClickConnect","data","console","addData","log","e","target","value"],"mappings":"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","sourcesContent":["import { useState, React } from \"react\";\nimport logo from './logo.svg';\nimport useAsync from \"./components/useAsync\";\nimport { Input, Message, Button } from \"semantic-ui-react\";\nimport { unlockAccount } from \"./api/web3\";\nimport { useWeb3Context } from \"./contexts/Web3\";\nimport 'semantic-ui-css/semantic.min.css';\nimport './App.css';\n\nfunction App() {\n\n  const [filmName, setFilmName] = useState('');\n  const [filmDescription, setFilmDescription] = useState('');\n  const [filmCreator, setFilmCreator] = useState('');\n\n  const {\n    state: { account },\n    updateAccount\n  } = useWeb3Context();\n  \n  const { pending, error, call } = useAsync(unlockAccount);\n\n  async function onClickConnect() {\n    const { error, data } = await call(null);\n\n    if (error) {\n      console.error(error);\n    }\n    if (data) {\n      updateAccount(data)\n    }\n  }\n\n  const addData = () => {\n    console.log(filmName, filmDescription, filmCreator);\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"App-header\">\n        <h1>Testing</h1>\n        <div>Account: {account}</div>\n        <h1>Film Name</h1>\n        <Input \n          type=\"text\" \n          onChange={(e) => {\n            setFilmName(e.target.value);\n          }}\n        />\n        <h1>Film Creator</h1>\n        <Input \n          type=\"text\" \n          onChange={(e) => {\n            setFilmCreator(e.target.value);\n          }}\n        />\n        <h1>Film Description</h1>\n        <Input \n          type=\"text\" \n          onChange={(e) => {\n            setFilmDescription(e.target.value);\n          }}\n        />\n        <Button\n          color=\"green\"\n          onClick={() => addData}\n        >Publish Video</Button>\n        <Message warning>Metamask is not connected</Message>\n        <Button \n          color=\"blue\"\n          onClick={() => onClickConnect()}\n          disabled={pending}\n          loading={pending}\n        >Connect to Metamask</Button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}